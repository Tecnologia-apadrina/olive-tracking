version: '3.9'

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-trazoliva}
      POSTGRES_USER: ${POSTGRES_USER:-trazo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-trazo}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      # Conectar al servicio db
      DATABASE_URL: postgres://${POSTGRES_USER:-trazo}:${POSTGRES_PASSWORD:-trazo}@db:5432/${POSTGRES_DB:-trazoliva}
      # Admin inicial (opcional)
      ADMIN_USER: ${ADMIN_USER:-admin}
      ADMIN_PASS: ${ADMIN_PASS:-admin}
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Si quieres forzar una URL absoluta en el build, define VITE_API_URL.
        # Recomendado dejar vac√≠o y usar el proxy /api del Nginx.
        VITE_API_URL: ${VITE_API_URL-}
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  pgdata:

